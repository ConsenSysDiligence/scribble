/// This file is auto-generated by Scribble and shouldn't be edited directly.
/// Use --disarm prior to make any changes.
pragma solidity 0.8.13;

/// Utility contract holding a stack counter
contract __scribble_ReentrancyUtils {
    event AssertionFailed(string message);

    event AssertionFailedData(int eventId, bytes encodingData);

    bool __scribble_out_of_contract = true;
    /// Implementation of user constant const uint256 H := (60 * 60)
    uint256 public constant H_15_0 = 60 * 60;
    /// Implementation of user constant const uint256 D := (H * 24)
    uint256 public constant D_15_0 = H_15_0 * 24;
    /// Implementation of user constant const uint256 W := (D * 7)
    uint256 public constant W_15_0 = D_15_0 * 7;
}

/// #const uint256 H := 60 * 60;
///  #const uint256 D := H * 24;
contract Some is __scribble_ReentrancyUtils {
    function testHD() public {
        _original_Some_testHD();
        unchecked {
            if (!(D_15_0 == (H_15_0 * 24))) {
                emit AssertionFailed("2: ");
                assert(false);
            }
        }
    }

    function _original_Some_testHD() private {}
}

/// #const uint256 W := D * 7;
contract Other is __scribble_ReentrancyUtils {
    function testWHD() public {
        _original_Other_testWHD();
        unchecked {
            if (!(((W_15_0 == (D_15_0 * 7)) && (D_15_0 == (H_15_0 * 24))) && (H_15_0 == (60 * 60)))) {
                emit AssertionFailed("4: ");
                assert(false);
            }
        }
    }

    function _original_Other_testWHD() private {}
}
