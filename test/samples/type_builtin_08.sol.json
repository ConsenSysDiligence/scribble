{"sources":{"test/samples/type_builtin_08.sol":{"ast":{"absolutePath":"test/samples/type_builtin_08.sol","exportedSymbols":{"A":[5],"Boo":[16],"IFace":[11],"Price":[7],"UserDefinedValueTypes":[31]},"id":32,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".8"],"nodeType":"PragmaDirective","src":"0:22:0"},{"canonicalName":"A","id":5,"members":[{"id":2,"name":"A","nameLocation":"37:1:0","nodeType":"EnumValue","src":"37:1:0"},{"id":3,"name":"B","nameLocation":"44:1:0","nodeType":"EnumValue","src":"44:1:0"},{"id":4,"name":"C","nameLocation":"51:1:0","nodeType":"EnumValue","src":"51:1:0"}],"name":"A","nameLocation":"29:1:0","nodeType":"EnumDefinition","src":"24:30:0"},{"id":7,"name":"Price","nameLocation":"61:5:0","nodeType":"UserDefinedValueTypeDefinition","src":"56:21:0","underlyingType":{"id":6,"name":"uint32","nodeType":"ElementaryTypeName","src":"70:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":11,"linearizedBaseContracts":[11],"name":"IFace","nameLocation":"89:5:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c2985578","id":10,"implemented":false,"kind":"function","modifiers":[],"name":"foo","nameLocation":"110:3:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[],"src":"113:2:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[],"src":"124:0:0"},"scope":11,"src":"101:24:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":32,"src":"79:48:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":16,"linearizedBaseContracts":[16],"name":"Boo","nameLocation":"138:3:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":14,"nodeType":"Block","src":"172:2:0","statements":[]},"functionSelector":"c2985578","id":15,"implemented":true,"kind":"function","modifiers":[],"name":"foo","nameLocation":"157:3:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"160:2:0"},"returnParameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"172:0:0"},"scope":16,"src":"148:26:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":32,"src":"129:47:0","usedErrors":[]},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":31,"linearizedBaseContracts":[31],"name":"UserDefinedValueTypes","nameLocation":"187:21:0","nodeType":"ContractDefinition","nodes":[{"id":18,"name":"Quantity","nameLocation":"220:8:0","nodeType":"UserDefinedValueTypeDefinition","src":"215:24:0","underlyingType":{"id":17,"name":"uint32","nodeType":"ElementaryTypeName","src":"232:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}},{"body":{"id":29,"nodeType":"Block","src":"776:7:0","statements":[]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"245:480:0","text":"#if_succeeds a >= type(uint32).min && a <= type(uint32).max;\n #if_succeeds b >= type(int64).min && b <= type(int64).max;\n #if_succeeds c != type(A).min && c != type(A).max;\n #if_succeeds keccak256(bytes(type(IFace).name)) == keccak256(bytes(\"IFace\"));\n #if_succeeds keccak256(type(Boo).creationCode) == bytes32(0x0);\n #if_succeeds keccak256(type(Boo).runtimeCode) == bytes32(0x0);\n #if_succeeds type(IFace).interfaceId != bytes4(0x0);"},"functionSelector":"df89a98a","id":30,"implemented":true,"kind":"function","modifiers":[],"name":"main","nameLocation":"739:4:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"a","nameLocation":"751:1:0","nodeType":"VariableDeclaration","scope":30,"src":"744:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":20,"name":"uint32","nodeType":"ElementaryTypeName","src":"744:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"b","nameLocation":"760:1:0","nodeType":"VariableDeclaration","scope":30,"src":"754:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":22,"name":"int64","nodeType":"ElementaryTypeName","src":"754:5:0","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"c","nameLocation":"765:1:0","nodeType":"VariableDeclaration","scope":30,"src":"763:3:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_A_$5","typeString":"enum A"},"typeName":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"A","nodeType":"IdentifierPath","referencedDeclaration":5,"src":"763:1:0"},"referencedDeclaration":5,"src":"763:1:0","typeDescriptions":{"typeIdentifier":"t_enum$_A_$5","typeString":"enum A"}},"visibility":"internal"}],"src":"743:24:0"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"776:0:0"},"scope":31,"src":"730:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":32,"src":"178:607:0","usedErrors":[]}],"src":"0:785:0","sourceEntryKey":"test/samples/type_builtin_08.sol"},"id":0,"source":"pragma solidity 0.8.8;\n\nenum A {\n    A,\n    B,\n    C\n}\n\ntype Price is uint32;\n\ninterface IFace {\n    function foo() external;\n}\n\ncontract Boo {\n    function foo() external {}\n}\n\ncontract UserDefinedValueTypes {\n    type Quantity is uint32;\n\n    /// #if_succeeds a >= type(uint32).min && a <= type(uint32).max;\n    /// #if_succeeds b >= type(int64).min && b <= type(int64).max;\n    /// #if_succeeds c != type(A).min && c != type(A).max;\n    /// #if_succeeds keccak256(bytes(type(IFace).name)) == keccak256(bytes(\"IFace\"));\n    /// #if_succeeds keccak256(type(Boo).creationCode) == bytes32(0x0);\n    /// #if_succeeds keccak256(type(Boo).runtimeCode) == bytes32(0x0);\n    /// #if_succeeds type(IFace).interfaceId != bytes4(0x0);\n    function main(uint32 a, int64 b, A c) public  {\n    }\n}"}},"compilerVersion":"0.8.8"}