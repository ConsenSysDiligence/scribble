{"sources":{"test/samples/assert_forall.sol":{"ast":{"absolutePath":"test/samples/assert_forall.sol","exportedSymbols":{"AssertForall":[32]},"id":33,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"0:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AssertForall","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":32,"linearizedBaseContracts":[32],"name":"AssertForall","nameLocation":"33:12:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":30,"nodeType":"Block","src":"87:128:0","statements":[{"assignments":[8],"declarations":[{"constant":false,"id":8,"mutability":"mutable","name":"sum","nameLocation":"96:3:0","nodeType":"VariableDeclaration","scope":30,"src":"91:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint","nodeType":"ElementaryTypeName","src":"91:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10,"initialValue":{"hexValue":"30","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"102:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"91:12:0"},{"body":{"id":28,"nodeType":"Block","src":"191:21:0","statements":[{"expression":{"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":22,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"196:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":23,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"203:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":25,"indexExpression":{"id":24,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"205:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"203:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"196:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":27,"nodeType":"ExpressionStatement","src":"196:11:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":15,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"172:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":16,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"176:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"176:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"172:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"#assert forall (uint i in n) n[i] < 100; ","id":29,"initializationExpression":{"assignments":[12],"declarations":[{"constant":false,"id":12,"mutability":"mutable","name":"i","nameLocation":"165:1:0","nodeType":"VariableDeclaration","scope":29,"src":"160:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint","nodeType":"ElementaryTypeName","src":"160:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":14,"initialValue":{"hexValue":"30","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"160:10:0"},"loopExpression":{"expression":{"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"186:3:0","subExpression":{"id":19,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"186:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":21,"nodeType":"ExpressionStatement","src":"186:3:0"},"nodeType":"ForStatement","src":"155:57:0"}]},"functionSelector":"2964e61d","id":31,"implemented":true,"kind":"function","modifiers":[],"name":"main","nameLocation":"58:4:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"n","nameLocation":"77:1:0","nodeType":"VariableDeclaration","scope":31,"src":"63:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2,"name":"uint","nodeType":"ElementaryTypeName","src":"63:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3,"nodeType":"ArrayTypeName","src":"63:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"62:17:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"87:0:0"},"scope":32,"src":"49:166:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":33,"src":"24:193:0","usedErrors":[]}],"src":"0:218:0","sourceEntryKey":"test/samples/assert_forall.sol"},"id":0,"source":"pragma solidity 0.8.10;\ncontract AssertForall {\n\tfunction main(uint[] memory n) public {\n\t\tuint sum = 0;\n\t\t/// #assert forall (uint i in n) n[i] < 100; \n\t\tfor (uint i = 0; i < n.length; i++) {\n\t\t\tsum += n[i];\n\t\t}\n\t}\n}\n"}},"compilerVersion":"0.8.10"}